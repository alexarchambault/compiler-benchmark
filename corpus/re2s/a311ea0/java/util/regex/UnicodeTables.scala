// AUTOGENERATED by make_unicode_tables.awk from the output of
// go/src/pkg/unicode/maketables.go.  Yes it's awful, but frankly
// it's quicker than porting 1300 more lines of Go.

package java.util.regex

import java.util.{HashMap, Map}

object UnicodeTables {
  final val UpperCase: Int = 0
  final val LowerCase: Int = 1
  final val TitleCase: Int = 2
  final val UpperLower = mkUpperLower()
  private def mkUpperLower() = 0x110000

  private[this] val _Lm: Array[Array[Int]] =
    new Array[Array[Int]](0)
  private[this] final val _Ll = make_Ll()
  private def make_Ll() =
    new Array[Array[Int]](0)
  private[this] final val _C = make_C()
  private def make_C() =
    new Array[Array[Int]](0)
  private[this] final val _M = make_M()
  private def make_M() =
    new Array[Array[Int]](0)
  private[this] final val _L = make_L()
  private def make_L() =
    new Array[Array[Int]](0)
  private[this] final val _N = make_N()
  private def make_N() =
    new Array[Array[Int]](0)
  private[this] final val _P = make_P()
  private def make_P() =
    new Array[Array[Int]](0)
  private[this] final val _S = make_S()
  private def make_S() =
    new Array[Array[Int]](0)
  private[this] final val _Z = make_Z()
  private def make_Z() =
    new Array[Array[Int]](0)
  private[this] final val _Me = make_Me()
  private def make_Me() =
    new Array[Array[Int]](0)
  private[this] final val _Mc = make_Mc()
  private def make_Mc() =
    new Array[Array[Int]](0)
  private[this] final val _Mn = make_Mn()
  private def make_Mn() =
    new Array[Array[Int]](0)
  private[this] final val _Zl = make_Zl()
  private def make_Zl() =
    new Array[Array[Int]](0)
  private[this] final val _Zp = make_Zp()
  private def make_Zp() =
    new Array[Array[Int]](0)
  private[this] final val _Zs = make_Zs()
  private def make_Zs() =
    new Array[Array[Int]](0)
  private[this] final val _Cs = make_Cs()
  private def make_Cs() =
    new Array[Array[Int]](0)
  private[this] final val _Co = make_Co()
  private def make_Co() =
    new Array[Array[Int]](0)
  private[this] final val _Cf = make_Cf()
  private def make_Cf() =
    new Array[Array[Int]](0)
  private[this] final val _Cc = make_Cc()
  private def make_Cc() =
    new Array[Array[Int]](0)
  private[this] final val _Po = make_Po()
  private def make_Po() =
    new Array[Array[Int]](0)
  private[this] final val _Pi = make_Pi()
  private def make_Pi() =
    new Array[Array[Int]](0)
  private[this] final val _Pf = make_Pf()
  private def make_Pf() =
    new Array[Array[Int]](0)
  private[this] final val _Pe = make_Pe()
  private def make_Pe() =
    new Array[Array[Int]](0)
  private[this] final val _Pd = make_Pd()
  private def make_Pd() =
    new Array[Array[Int]](0)
  private[this] final val _Pc = make_Pc()
  private def make_Pc() =
    new Array[Array[Int]](0)
  private[this] final val _Ps = make_Ps()
  private def make_Ps() =
    new Array[Array[Int]](0)
  private[this] final val _Nd = make_Nd()
  private def make_Nd() =
    new Array[Array[Int]](0)
  private[this] final val _Nl = make_Nl()
  private def make_Nl() =
    new Array[Array[Int]](0)
  private[this] final val _No = make_No()
  private def make_No() =
    new Array[Array[Int]](0)
  private[this] final val _So = make_So()
  private def make_So() =
    new Array[Array[Int]](0)
  private[this] final val _Sm = make_Sm()
  private def make_Sm() =
    new Array[Array[Int]](0)
  private[this] final val _Sk = make_Sk()
  private def make_Sk() =
    new Array[Array[Int]](0)
  private[this] final val _Sc = make_Sc()
  private def make_Sc() =
    new Array[Array[Int]](0)
  private[this] final val _Lu = make_Lu()
  private def make_Lu() =
    new Array[Array[Int]](0)
  private[this] final val _Lt = make_Lt()
  private def make_Lt() =
    new Array[Array[Int]](0)
  private[this] final val _Lo = make_Lo()
  private def make_Lo() =
    new Array[Array[Int]](0)
  final val Cc: Array[Array[Int]] = _Cc
  final val Cf: Array[Array[Int]] = _Cf
  final val Co: Array[Array[Int]] = _Co
  final val Cs: Array[Array[Int]] = _Cs
  final val Digit: Array[Array[Int]] = _Nd
  final val Nd: Array[Array[Int]] = _Nd
  final val Letter = mkLetter()
  private def mkLetter() = _L
  final val L: Array[Array[Int]] = _L
  final val Lm: Array[Array[Int]] = _Lm
  final val Lo: Array[Array[Int]] = _Lo
  final val Lower: Array[Array[Int]] = _Ll
  final val Ll: Array[Array[Int]] = _Ll
  final val Mark: Array[Array[Int]] = _M
  final val M: Array[Array[Int]] = _M
  final val Mc: Array[Array[Int]] = _Mc
  final val Me: Array[Array[Int]] = _Me
  final val Mn: Array[Array[Int]] = _Mn
  final val Nl: Array[Array[Int]] = _Nl
  final val No: Array[Array[Int]] = _No
  final val Number = mkNumber()
  private def mkNumber() = _N
  final val N: Array[Array[Int]] = _N
  final val Other: Array[Array[Int]] = _C
  final val C: Array[Array[Int]] = _C
  final val Pc: Array[Array[Int]] = _Pc
  final val Pd: Array[Array[Int]] = _Pd
  final val Pe: Array[Array[Int]] = _Pe
  final val Pf: Array[Array[Int]] = _Pf
  final val Pi: Array[Array[Int]] = _Pi
  final val Po: Array[Array[Int]] = _Po
  final val Ps: Array[Array[Int]] = _Ps
  final val Punct: Array[Array[Int]] = _P
  final val P: Array[Array[Int]] = _P
  final val Sc: Array[Array[Int]] = _Sc
  final val Sk: Array[Array[Int]] = _Sk
  final val Sm: Array[Array[Int]] = _Sm
  final val So: Array[Array[Int]] = _So
  final val Space: Array[Array[Int]] = _Z
  final val Z: Array[Array[Int]] = _Z
  final val Symbol = mkSymbol()
  private def mkSymbol() = _S
  final val S: Array[Array[Int]] = _S
  final val Title: Array[Array[Int]] = _Lt
  final val Lt: Array[Array[Int]] = _Lt
  final val Upper: Array[Array[Int]] = _Lu
  final val Lu: Array[Array[Int]] = _Lu
  final val Zl: Array[Array[Int]] = _Zl
  final val Zp: Array[Array[Int]] = _Zp
  final val Zs: Array[Array[Int]] = _Zs
  private[this] final val _Katakana = make_Katakana()
  private def make_Katakana() =
    new Array[Array[Int]](0)
  private[this] final val _Malayalam = make_Malayalam()
  private def make_Malayalam() =
    new Array[Array[Int]](0)
  private[this] final val _Phags_Pa = make_Phags_Pa()
  private def make_Phags_Pa() =
    new Array[Array[Int]](0)
  private[this] final val _Inscriptional_Parthian = make_Inscriptional_Parthian()
  private def make_Inscriptional_Parthian() =
    new Array[Array[Int]](0)
  private[this] final val _Latin = make_Latin()
  private def make_Latin() =
    new Array[Array[Int]](0)
  private[this] final val _Inscriptional_Pahlavi = make_Inscriptional_Pahlavi()
  private def make_Inscriptional_Pahlavi() =
    new Array[Array[Int]](0)
  private[this] final val _Osmanya = make_Osmanya()
  private def make_Osmanya() =
    new Array[Array[Int]](0)
  private[this] final val _Khmer = make_Khmer()
  private def make_Khmer() =
    new Array[Array[Int]](0)
  private[this] final val _Inherited = make_Inherited()
  private def make_Inherited() =
    new Array[Array[Int]](0)
  private[this] final val _Telugu = make_Telugu()
  private def make_Telugu() =
    new Array[Array[Int]](0)
  private[this] final val _Samaritan = make_Samaritan()
  private def make_Samaritan() =
    new Array[Array[Int]](0)
  private[this] final val _Bopomofo = make_Bopomofo()
  private def make_Bopomofo() =
    new Array[Array[Int]](0)
  private[this] final val _Imperial_Aramaic = make_Imperial_Aramaic()
  private def make_Imperial_Aramaic() =
    new Array[Array[Int]](0)
  private[this] final val _Kaithi = make_Kaithi()
  private def make_Kaithi() =
    new Array[Array[Int]](0)
  private[this] final val _Mandaic = make_Mandaic()
  private def make_Mandaic() =
    new Array[Array[Int]](0)
  private[this] final val _Old_South_Arabian = make_Old_South_Arabian()
  private def make_Old_South_Arabian() =
    new Array[Array[Int]](0)
  private[this] final val _Kayah_Li = make_Kayah_Li()
  private def make_Kayah_Li() =
    new Array[Array[Int]](0)
  private[this] final val _New_Tai_Lue = make_New_Tai_Lue()
  private def make_New_Tai_Lue() =
    new Array[Array[Int]](0)
  private[this] final val _Tai_Le = make_Tai_Le()
  private def make_Tai_Le() =
    new Array[Array[Int]](0)
  private[this] final val _Kharoshthi = make_Kharoshthi()
  private def make_Kharoshthi() =
    new Array[Array[Int]](0)
  private[this] final val _Common = make_Common()
  private def make_Common() =
    new Array[Array[Int]](0)
  private[this] final val _Kannada = make_Kannada()
  private def make_Kannada() =
    new Array[Array[Int]](0)
  private[this] final val _Old_Turkic = make_Old_Turkic()
  private def make_Old_Turkic() =
    new Array[Array[Int]](0)
  private[this] final val _Tamil = make_Tamil()
  private def make_Tamil() =
    new Array[Array[Int]](0)
  private[this] final val _Tagalog = make_Tagalog()
  private def make_Tagalog() =
    new Array[Array[Int]](0)
  private[this] final val _Brahmi = make_Brahmi()
  private def make_Brahmi() =
    new Array[Array[Int]](0)
  private[this] final val _Arabic = make_Arabic()
  private def make_Arabic() =
    new Array[Array[Int]](0)
  private[this] final val _Tagbanwa = make_Tagbanwa()
  private def make_Tagbanwa() =
    new Array[Array[Int]](0)
  private[this] final val _Canadian_Aboriginal = make_Canadian_Aboriginal()
  private def make_Canadian_Aboriginal() =
    new Array[Array[Int]](0)
  private[this] final val _Tibetan = make_Tibetan()
  private def make_Tibetan() =
    new Array[Array[Int]](0)
  private[this] final val _Coptic = make_Coptic()
  private def make_Coptic() =
    new Array[Array[Int]](0)
  private[this] final val _Hiragana = make_Hiragana()
  private def make_Hiragana() =
    new Array[Array[Int]](0)
  private[this] final val _Limbu = make_Limbu()
  private def make_Limbu() =
    new Array[Array[Int]](0)
  private[this] final val _Egyptian_Hieroglyphs = make_Egyptian_Hieroglyphs()
  private def make_Egyptian_Hieroglyphs() =
    new Array[Array[Int]](0)
  private[this] final val _Avestan = make_Avestan()
  private def make_Avestan() =
    new Array[Array[Int]](0)
  private[this] final val _Myanmar = make_Myanmar()
  private def make_Myanmar() =
    new Array[Array[Int]](0)
  private[this] final val _Armenian = make_Armenian()
  private def make_Armenian() =
    new Array[Array[Int]](0)
  private[this] final val _Sinhala = make_Sinhala()
  private def make_Sinhala() =
    new Array[Array[Int]](0)
  private[this] final val _Bengali = make_Bengali()
  private def make_Bengali() =
    new Array[Array[Int]](0)
  private[this] final val _Greek = make_Greek()
  private def make_Greek() =
    new Array[Array[Int]](0)
  private[this] final val _Cham = make_Cham()
  private def make_Cham() =
    new Array[Array[Int]](0)
  private[this] final val _Hebrew = make_Hebrew()
  private def make_Hebrew() =
    new Array[Array[Int]](0)
  private[this] final val _Meetei_Mayek = make_Meetei_Mayek()
  private def make_Meetei_Mayek() =
    new Array[Array[Int]](0)
  private[this] final val _Saurashtra = make_Saurashtra()
  private def make_Saurashtra() =
    new Array[Array[Int]](0)
  private[this] final val _Hangul = make_Hangul()
  private def make_Hangul() =
    new Array[Array[Int]](0)
  private[this] final val _Runic = make_Runic()
  private def make_Runic() =
    new Array[Array[Int]](0)
  private[this] final val _Deseret = make_Deseret()
  private def make_Deseret() =
    new Array[Array[Int]](0)
  private[this] final val _Lisu = make_Lisu()
  private def make_Lisu() =
    new Array[Array[Int]](0)
  private[this] final val _Sundanese = make_Sundanese()
  private def make_Sundanese() =
    new Array[Array[Int]](0)
  private[this] final val _Glagolitic = make_Glagolitic()
  private def make_Glagolitic() =
    new Array[Array[Int]](0)
  private[this] final val _Oriya = make_Oriya()
  private def make_Oriya() =
    new Array[Array[Int]](0)
  private[this] final val _Buhid = make_Buhid()
  private def make_Buhid() =
    new Array[Array[Int]](0)
  private[this] final val _Ethiopic = make_Ethiopic()
  private def make_Ethiopic() =
    new Array[Array[Int]](0)
  private[this] final val _Javanese = make_Javanese()
  private def make_Javanese() =
    new Array[Array[Int]](0)
  private[this] final val _Syloti_Nagri = make_Syloti_Nagri()
  private def make_Syloti_Nagri() =
    new Array[Array[Int]](0)
  private[this] final val _Vai = make_Vai()
  private def make_Vai() =
    new Array[Array[Int]](0)
  private[this] final val _Cherokee = make_Cherokee()
  private def make_Cherokee() =
    new Array[Array[Int]](0)
  private[this] final val _Ogham = make_Ogham()
  private def make_Ogham() =
    new Array[Array[Int]](0)
  private[this] final val _Batak = make_Batak()
  private def make_Batak() =
    new Array[Array[Int]](0)
  private[this] final val _Syriac = make_Syriac()
  private def make_Syriac() =
    new Array[Array[Int]](0)
  private[this] final val _Gurmukhi = make_Gurmukhi()
  private def make_Gurmukhi() =
    new Array[Array[Int]](0)
  private[this] final val _Tai_Tham = make_Tai_Tham()
  private def make_Tai_Tham() =
    new Array[Array[Int]](0)
  private[this] final val _Ol_Chiki = make_Ol_Chiki()
  private def make_Ol_Chiki() =
    new Array[Array[Int]](0)
  private[this] final val _Mongolian = make_Mongolian()
  private def make_Mongolian() =
    new Array[Array[Int]](0)
  private[this] final val _Hanunoo = make_Hanunoo()
  private def make_Hanunoo() =
    new Array[Array[Int]](0)
  private[this] final val _Cypriot = make_Cypriot()
  private def make_Cypriot() =
    new Array[Array[Int]](0)
  private[this] final val _Buginese = make_Buginese()
  private def make_Buginese() =
    new Array[Array[Int]](0)
  private[this] final val _Bamum = make_Bamum()
  private def make_Bamum() =
    new Array[Array[Int]](0)
  private[this] final val _Lepcha = make_Lepcha()
  private def make_Lepcha() =
    new Array[Array[Int]](0)
  private[this] final val _Thaana = make_Thaana()
  private def make_Thaana() =
    new Array[Array[Int]](0)
  private[this] final val _Old_Persian = make_Old_Persian()
  private def make_Old_Persian() =
    new Array[Array[Int]](0)
  private[this] final val _Cuneiform = make_Cuneiform()
  private def make_Cuneiform() =
    new Array[Array[Int]](0)
  private[this] final val _Rejang = make_Rejang()
  private def make_Rejang() =
    new Array[Array[Int]](0)
  private[this] final val _Georgian = make_Georgian()
  private def make_Georgian() =
    new Array[Array[Int]](0)
  private[this] final val _Shavian = make_Shavian()
  private def make_Shavian() =
    new Array[Array[Int]](0)
  private[this] final val _Lycian = make_Lycian()
  private def make_Lycian() =
    new Array[Array[Int]](0)
  private[this] final val _Nko = make_Nko()
  private def make_Nko() =
    new Array[Array[Int]](0)
  private[this] final val _Yi = make_Yi()
  private def make_Yi() =
    new Array[Array[Int]](0)
  private[this] final val _Lao = make_Lao()
  private def make_Lao() =
    new Array[Array[Int]](0)
  private[this] final val _Linear_B = make_Linear_B()
  private def make_Linear_B() =
    new Array[Array[Int]](0)
  private[this] final val _Old_Italic = make_Old_Italic()
  private def make_Old_Italic() =
    new Array[Array[Int]](0)
  private[this] final val _Tai_Viet = make_Tai_Viet()
  private def make_Tai_Viet() =
    new Array[Array[Int]](0)
  private[this] final val _Devanagari = make_Devanagari()
  private def make_Devanagari() =
    new Array[Array[Int]](0)
  private[this] final val _Lydian = make_Lydian()
  private def make_Lydian() =
    new Array[Array[Int]](0)
  private[this] final val _Tifinagh = make_Tifinagh()
  private def make_Tifinagh() =
    new Array[Array[Int]](0)
  private[this] final val _Ugaritic = make_Ugaritic()
  private def make_Ugaritic() =
    new Array[Array[Int]](0)
  private[this] final val _Thai = make_Thai()
  private def make_Thai() =
    new Array[Array[Int]](0)
  private[this] final val _Cyrillic = make_Cyrillic()
  private def make_Cyrillic() =
    new Array[Array[Int]](0)
  private[this] final val _Gujarati = make_Gujarati()
  private def make_Gujarati() =
    new Array[Array[Int]](0)
  private[this] final val _Carian = make_Carian()
  private def make_Carian() =
    new Array[Array[Int]](0)
  private[this] final val _Phoenician = make_Phoenician()
  private def make_Phoenician() =
    new Array[Array[Int]](0)
  private[this] final val _Balinese = make_Balinese()
  private def make_Balinese() =
    new Array[Array[Int]](0)
  private[this] final val _Braille = make_Braille()
  private def make_Braille() =
    new Array[Array[Int]](0)
  private[this] final val _Han = make_Han()
  private def make_Han() =
    new Array[Array[Int]](0)
  private[this] final val _Gothic = make_Gothic()
  private def make_Gothic() =
    new Array[Array[Int]](0)
  final val Arabic: Array[Array[Int]] = _Arabic
  final val Armenian: Array[Array[Int]] = _Armenian
  final val Avestan: Array[Array[Int]] = _Avestan
  final val Balinese: Array[Array[Int]] = _Balinese
  final val Bamum: Array[Array[Int]] = _Bamum
  final val Batak: Array[Array[Int]] = _Batak
  final val Bengali: Array[Array[Int]] = _Bengali
  final val Bopomofo: Array[Array[Int]] = _Bopomofo
  final val Brahmi: Array[Array[Int]] = _Brahmi
  final val Braille: Array[Array[Int]] = _Braille
  final val Buginese: Array[Array[Int]] = _Buginese
  final val Buhid: Array[Array[Int]] = _Buhid
  final val Canadian_Aboriginal: Array[Array[Int]] = _Canadian_Aboriginal
  final val Carian: Array[Array[Int]] = _Carian
  final val Cham: Array[Array[Int]] = _Cham
  final val Cherokee: Array[Array[Int]] = _Cherokee
  final val Common: Array[Array[Int]] = _Common
  final val Coptic: Array[Array[Int]] = _Coptic
  final val Cuneiform: Array[Array[Int]] = _Cuneiform
  final val Cypriot: Array[Array[Int]] = _Cypriot
  final val Cyrillic: Array[Array[Int]] = _Cyrillic
  final val Deseret: Array[Array[Int]] = _Deseret
  final val Devanagari: Array[Array[Int]] = _Devanagari
  final val Egyptian_Hieroglyphs: Array[Array[Int]] = _Egyptian_Hieroglyphs
  final val Ethiopic: Array[Array[Int]] = _Ethiopic
  final val Georgian: Array[Array[Int]] = _Georgian
  final val Glagolitic: Array[Array[Int]] = _Glagolitic
  final val Gothic: Array[Array[Int]] = _Gothic
  final val Greek: Array[Array[Int]] = _Greek
  final val Gujarati: Array[Array[Int]] = _Gujarati
  final val Gurmukhi: Array[Array[Int]] = _Gurmukhi
  final val Han: Array[Array[Int]] = _Han
  final val Hangul: Array[Array[Int]] = _Hangul
  final val Hanunoo: Array[Array[Int]] = _Hanunoo
  final val Hebrew: Array[Array[Int]] = _Hebrew
  final val Hiragana: Array[Array[Int]] = _Hiragana
  final val Imperial_Aramaic: Array[Array[Int]] = _Imperial_Aramaic
  final val Inherited: Array[Array[Int]] = _Inherited
  final val Inscriptional_Pahlavi: Array[Array[Int]] = _Inscriptional_Pahlavi
  final val Inscriptional_Parthian = mkInscriptional_Parthian()
  private def mkInscriptional_Parthian() = _Inscriptional_Parthian
  final val Javanese: Array[Array[Int]] = _Javanese
  final val Kaithi: Array[Array[Int]] = _Kaithi
  final val Kannada: Array[Array[Int]] = _Kannada
  final val Katakana: Array[Array[Int]] = _Katakana
  final val Kayah_Li: Array[Array[Int]] = _Kayah_Li
  final val Kharoshthi: Array[Array[Int]] = _Kharoshthi
  final val Khmer: Array[Array[Int]] = _Khmer
  final val Lao: Array[Array[Int]] = _Lao
  final val Latin: Array[Array[Int]] = _Latin
  final val Lepcha: Array[Array[Int]] = _Lepcha
  final val Limbu: Array[Array[Int]] = _Limbu
  final val Linear_B: Array[Array[Int]] = _Linear_B
  final val Lisu: Array[Array[Int]] = _Lisu
  final val Lycian: Array[Array[Int]] = _Lycian
  final val Lydian: Array[Array[Int]] = _Lydian
  final val Malayalam: Array[Array[Int]] = _Malayalam
  final val Mandaic: Array[Array[Int]] = _Mandaic
  final val Meetei_Mayek: Array[Array[Int]] = _Meetei_Mayek
  final val Mongolian: Array[Array[Int]] = _Mongolian
  final val Myanmar: Array[Array[Int]] = _Myanmar
  final val New_Tai_Lue: Array[Array[Int]] = _New_Tai_Lue
  final val Nko: Array[Array[Int]] = _Nko
  final val Ogham: Array[Array[Int]] = _Ogham
  final val Ol_Chiki: Array[Array[Int]] = _Ol_Chiki
  final val Old_Italic: Array[Array[Int]] = _Old_Italic
  final val Old_Persian: Array[Array[Int]] = _Old_Persian
  final val Old_South_Arabian: Array[Array[Int]] = _Old_South_Arabian
  final val Old_Turkic: Array[Array[Int]] = _Old_Turkic
  final val Oriya: Array[Array[Int]] = _Oriya
  final val Osmanya: Array[Array[Int]] = _Osmanya
  final val Phags_Pa: Array[Array[Int]] = _Phags_Pa
  final val Phoenician: Array[Array[Int]] = _Phoenician
  final val Rejang: Array[Array[Int]] = _Rejang
  final val Runic: Array[Array[Int]] = _Runic
  final val Samaritan: Array[Array[Int]] = _Samaritan
  final val Saurashtra: Array[Array[Int]] = _Saurashtra
  final val Shavian: Array[Array[Int]] = _Shavian
  final val Sinhala: Array[Array[Int]] = _Sinhala
  final val Sundanese: Array[Array[Int]] = _Sundanese
  final val Syloti_Nagri: Array[Array[Int]] = _Syloti_Nagri
  final val Syriac: Array[Array[Int]] = _Syriac
  final val Tagalog: Array[Array[Int]] = _Tagalog
  final val Tagbanwa: Array[Array[Int]] = _Tagbanwa
  final val Tai_Le: Array[Array[Int]] = _Tai_Le
  final val Tai_Tham: Array[Array[Int]] = _Tai_Tham
  final val Tai_Viet: Array[Array[Int]] = _Tai_Viet
  final val Tamil: Array[Array[Int]] = _Tamil
  final val Telugu: Array[Array[Int]] = _Telugu
  final val Thaana: Array[Array[Int]] = _Thaana
  final val Thai: Array[Array[Int]] = _Thai
  final val Tibetan: Array[Array[Int]] = _Tibetan
  final val Tifinagh: Array[Array[Int]] = _Tifinagh
  final val Ugaritic: Array[Array[Int]] = _Ugaritic
  final val Vai: Array[Array[Int]] = _Vai
  final val Yi: Array[Array[Int]] = _Yi
  private[this] final val _Pattern_Syntax = make_Pattern_Syntax()
  private def make_Pattern_Syntax() =
    new Array[Array[Int]](0)
  private[this] final val _Other_ID_Start = make_Other_ID_Start()
  private def make_Other_ID_Start() =
    new Array[Array[Int]](0)
  private[this] final val _Pattern_White_Space = make_Pattern_White_Space()
  private def make_Pattern_White_Space() =
    new Array[Array[Int]](0)
  private[this] final val _Other_Lowercase = make_Other_Lowercase()
  private def make_Other_Lowercase() =
    new Array[Array[Int]](0)
  private[this] final val _Soft_Dotted = make_Soft_Dotted()
  private def make_Soft_Dotted() =
    new Array[Array[Int]](0)
  private[this] final val _Hex_Digit = make_Hex_Digit()
  private def make_Hex_Digit() =
    new Array[Array[Int]](0)
  private[this] final val _ASCII_Hex_Digit = make_ASCII_Hex_Digit()
  private def make_ASCII_Hex_Digit() =
    new Array[Array[Int]](0)
  private[this] final val _Deprecated = make_Deprecated()
  private def make_Deprecated() =
    new Array[Array[Int]](0)
  private[this] final val _Terminal_Punctuation = make_Terminal_Punctuation()
  private def make_Terminal_Punctuation() =
    new Array[Array[Int]](0)
  private[this] final val _Quotation_Mark = make_Quotation_Mark()
  private def make_Quotation_Mark() =
    new Array[Array[Int]](0)
  private[this] final val _Other_ID_Continue = make_Other_ID_Continue()
  private def make_Other_ID_Continue() =
    new Array[Array[Int]](0)
  private[this] final val _Bidi_Control = make_Bidi_Control()
  private def make_Bidi_Control() =
    new Array[Array[Int]](0)
  private[this] final val _Variation_Selector = make_Variation_Selector()
  private def make_Variation_Selector() =
    new Array[Array[Int]](0)
  private[this] final val _Noncharacter_Code_Point = make_Noncharacter_Code_Point()
  private def make_Noncharacter_Code_Point() =
    new Array[Array[Int]](0)
  private[this] final val _Other_Math = make_Other_Math()
  private def make_Other_Math() =
    new Array[Array[Int]](0)
  private[this] final val _Unified_Ideograph = make_Unified_Ideograph()
  private def make_Unified_Ideograph() =
    new Array[Array[Int]](0)
  private[this] final val _Hyphen = make_Hyphen()
  private def make_Hyphen() =
    new Array[Array[Int]](0)
  private[this] final val _IDS_Binary_Operator = make_IDS_Binary_Operator()
  private def make_IDS_Binary_Operator() =
    new Array[Array[Int]](0)
  private[this] final val _Logical_Order_Exception = make_Logical_Order_Exception()
  private def make_Logical_Order_Exception() =
    new Array[Array[Int]](0)
  private[this] final val _Radical = make_Radical()
  private def make_Radical() =
    new Array[Array[Int]](0)
  private[this] final val _Other_Uppercase = make_Other_Uppercase()
  private def make_Other_Uppercase() =
    new Array[Array[Int]](0)
  private[this] final val _STerm = make_STerm()
  private def make_STerm() =
    new Array[Array[Int]](0)
  private[this] final val _Other_Alphabetic = make_Other_Alphabetic()
  private def make_Other_Alphabetic() =
    new Array[Array[Int]](0)
  private[this] final val _Diacritic = make_Diacritic()
  private def make_Diacritic() =
    new Array[Array[Int]](0)
  private[this] final val _Extender = make_Extender()
  private def make_Extender() =
    new Array[Array[Int]](0)
  private[this] final val _Join_Control = make_Join_Control()
  private def make_Join_Control() =
    new Array[Array[Int]](0)
  private[this] final val _Ideographic = make_Ideographic()
  private def make_Ideographic() =
    new Array[Array[Int]](0)
  private[this] final val _Dash = make_Dash()
  private def make_Dash() =
    new Array[Array[Int]](0)
  private[this] final val _IDS_Trinary_Operator = make_IDS_Trinary_Operator()
  private def make_IDS_Trinary_Operator() =
    new Array[Array[Int]](0)
  private[this] final val _Other_Grapheme_Extend = make_Other_Grapheme_Extend()
  private def make_Other_Grapheme_Extend() =
    new Array[Array[Int]](0)
  private[this] final val _Other_Default_Ignorable_Code_Point = make_Other_Default_Ignorable_Code_Point()
  private def make_Other_Default_Ignorable_Code_Point() =
    new Array[Array[Int]](0)
  private[this] final val _White_Space = make_White_Space()
  private def make_White_Space() =
    new Array[Array[Int]](0)
  final val ASCII_Hex_Digit: Array[Array[Int]] = _ASCII_Hex_Digit
  final val Bidi_Control: Array[Array[Int]] = _Bidi_Control
  final val Dash: Array[Array[Int]] = _Dash
  final val Deprecated: Array[Array[Int]] = _Deprecated
  final val Diacritic: Array[Array[Int]] = _Diacritic
  final val Extender: Array[Array[Int]] = _Extender
  final val Hex_Digit: Array[Array[Int]] = _Hex_Digit
  final val Hyphen: Array[Array[Int]] = _Hyphen
  final val IDS_Binary_Operator: Array[Array[Int]] = _IDS_Binary_Operator
  final val IDS_Trinary_Operator: Array[Array[Int]] = _IDS_Trinary_Operator
  final val Ideographic: Array[Array[Int]] = _Ideographic
  final val Join_Control: Array[Array[Int]] = _Join_Control
  final val Logical_Order_Exception = mkLogical_Order_Exception()
  private def mkLogical_Order_Exception() = _Logical_Order_Exception
  final val Noncharacter_Code_Point = mkNoncharacter_Code_Point()
  private def mkNoncharacter_Code_Point() = _Noncharacter_Code_Point
  final val Other_Alphabetic: Array[Array[Int]] = _Other_Alphabetic
  final val Other_Default_Ignorable_Code_Point = mkOther_Default_Ignorable_Code_Point()
  private def mkOther_Default_Ignorable_Code_Point() =
    _Other_Default_Ignorable_Code_Point
  final val Other_Grapheme_Extend = mkOther_Grapheme_Extend()
  private def mkOther_Grapheme_Extend() = _Other_Grapheme_Extend
  final val Other_ID_Continue: Array[Array[Int]] = _Other_ID_Continue
  final val Other_ID_Start: Array[Array[Int]] = _Other_ID_Start
  final val Other_Lowercase: Array[Array[Int]] = _Other_Lowercase
  final val Other_Math: Array[Array[Int]] = _Other_Math
  final val Other_Uppercase: Array[Array[Int]] = _Other_Uppercase
  final val Pattern_Syntax: Array[Array[Int]] = _Pattern_Syntax
  final val Pattern_White_Space: Array[Array[Int]] = _Pattern_White_Space
  final val Quotation_Mark: Array[Array[Int]] = _Quotation_Mark
  final val Radical: Array[Array[Int]] = _Radical
  final val STerm: Array[Array[Int]] = _STerm
  final val Soft_Dotted: Array[Array[Int]] = _Soft_Dotted
  final val Terminal_Punctuation: Array[Array[Int]] = _Terminal_Punctuation
  final val Unified_Ideograph: Array[Array[Int]] = _Unified_Ideograph
  final val Variation_Selector: Array[Array[Int]] = _Variation_Selector
  final val White_Space: Array[Array[Int]] = _White_Space
  final val CASE_RANGES = mkCASE_RANGES()
  private def mkCASE_RANGES() = new Array[Array[Int]](0)
  final val CASE_ORBIT = mkCASE_ORBIT()
  private def mkCASE_ORBIT() = new Array[Array[Int]](0)
  private[this] final val foldLl = mkfoldLl()
  private def mkfoldLl() =
    new Array[Array[Int]](0)
  private[this] final val foldInherited = mkfoldInherited()
  private def mkfoldInherited() =
    new Array[Array[Int]](0)
  private[this] final val foldM = mkfoldM()
  private def mkfoldM() =
    new Array[Array[Int]](0)
  private[this] final val foldL = mkfoldL()
  private def mkfoldL() =
    new Array[Array[Int]](0)
  private[this] final val foldMn = mkfoldMn()
  private def mkfoldMn() =
    new Array[Array[Int]](0)
  private[this] final val foldCommon = mkfoldCommon()
  private def mkfoldCommon() =
    new Array[Array[Int]](0)
  private[this] final val foldGreek = mkfoldGreek()
  private def mkfoldGreek() =
    new Array[Array[Int]](0)
  private[this] final val foldLu = mkfoldLu()
  private def mkfoldLu() =
    new Array[Array[Int]](0)
  private[this] final val foldLt = mkfoldLt()
  private def mkfoldLt() =
    new Array[Array[Int]](0)
  final val CATEGORIES: Map[String, Array[Array[Int]]] = {
    val map: HashMap[String, Array[Array[Int]]] = new HashMap[String, Array[Array[Int]]]()
    map.put("Lm", Lm)
    map.put("Ll", Ll)
    map.put("C", C)
    map.put("M", M)
    map.put("L", L)
    map.put("N", N)
    map.put("P", P)
    map.put("S", S)
    map.put("Z", Z)
    map.put("Me", Me)
    map.put("Mc", Mc)
    map.put("Mn", Mn)
    map.put("Zl", Zl)
    map.put("Zp", Zp)
    map.put("Zs", Zs)
    map.put("Cs", Cs)
    map.put("Co", Co)
    map.put("Cf", Cf)
    map.put("Cc", Cc)
    map.put("Po", Po)
    map.put("Pi", Pi)
    map.put("Pf", Pf)
    map.put("Pe", Pe)
    map.put("Pd", Pd)
    map.put("Pc", Pc)
    map.put("Ps", Ps)
    map.put("Nd", Nd)
    map.put("Nl", Nl)
    map.put("No", No)
    map.put("So", So)
    map.put("Sm", Sm)
    map.put("Sk", Sk)
    map.put("Sc", Sc)
    map.put("Lu", Lu)
    map.put("Lt", Lt)
    map.put("Lo", Lo)
    map
  }
  final val SCRIPTS: Map[String, Array[Array[Int]]] = {
    val map: HashMap[String, Array[Array[Int]]] = new HashMap[String, Array[Array[Int]]]()
    map.put("Katakana", Katakana)
    map.put("Malayalam", Malayalam)
    map.put("Phags_Pa", Phags_Pa)
    map.put("Inscriptional_Parthian", Inscriptional_Parthian)
    map.put("Latin", Latin)
    map.put("Inscriptional_Pahlavi", Inscriptional_Pahlavi)
    map.put("Osmanya", Osmanya)
    map.put("Khmer", Khmer)
    map.put("Inherited", Inherited)
    map.put("Telugu", Telugu)
    map.put("Samaritan", Samaritan)
    map.put("Bopomofo", Bopomofo)
    map.put("Imperial_Aramaic", Imperial_Aramaic)
    map.put("Kaithi", Kaithi)
    map.put("Mandaic", Mandaic)
    map.put("Old_South_Arabian", Old_South_Arabian)
    map.put("Kayah_Li", Kayah_Li)
    map.put("New_Tai_Lue", New_Tai_Lue)
    map.put("Tai_Le", Tai_Le)
    map.put("Kharoshthi", Kharoshthi)
    map.put("Common", Common)
    map.put("Kannada", Kannada)
    map.put("Old_Turkic", Old_Turkic)
    map.put("Tamil", Tamil)
    map.put("Tagalog", Tagalog)
    map.put("Brahmi", Brahmi)
    map.put("Arabic", Arabic)
    map.put("Tagbanwa", Tagbanwa)
    map.put("Canadian_Aboriginal", Canadian_Aboriginal)
    map.put("Tibetan", Tibetan)
    map.put("Coptic", Coptic)
    map.put("Hiragana", Hiragana)
    map.put("Limbu", Limbu)
    map.put("Egyptian_Hieroglyphs", Egyptian_Hieroglyphs)
    map.put("Avestan", Avestan)
    map.put("Myanmar", Myanmar)
    map.put("Armenian", Armenian)
    map.put("Sinhala", Sinhala)
    map.put("Bengali", Bengali)
    map.put("Greek", Greek)
    map.put("Cham", Cham)
    map.put("Hebrew", Hebrew)
    map.put("Meetei_Mayek", Meetei_Mayek)
    map.put("Saurashtra", Saurashtra)
    map.put("Hangul", Hangul)
    map.put("Runic", Runic)
    map.put("Deseret", Deseret)
    map.put("Lisu", Lisu)
    map.put("Sundanese", Sundanese)
    map.put("Glagolitic", Glagolitic)
    map.put("Oriya", Oriya)
    map.put("Buhid", Buhid)
    map.put("Ethiopic", Ethiopic)
    map.put("Javanese", Javanese)
    map.put("Syloti_Nagri", Syloti_Nagri)
    map.put("Vai", Vai)
    map.put("Cherokee", Cherokee)
    map.put("Ogham", Ogham)
    map.put("Batak", Batak)
    map.put("Syriac", Syriac)
    map.put("Gurmukhi", Gurmukhi)
    map.put("Tai_Tham", Tai_Tham)
    map.put("Ol_Chiki", Ol_Chiki)
    map.put("Mongolian", Mongolian)
    map.put("Hanunoo", Hanunoo)
    map.put("Cypriot", Cypriot)
    map.put("Buginese", Buginese)
    map.put("Bamum", Bamum)
    map.put("Lepcha", Lepcha)
    map.put("Thaana", Thaana)
    map.put("Old_Persian", Old_Persian)
    map.put("Cuneiform", Cuneiform)
    map.put("Rejang", Rejang)
    map.put("Georgian", Georgian)
    map.put("Shavian", Shavian)
    map.put("Lycian", Lycian)
    map.put("Nko", Nko)
    map.put("Yi", Yi)
    map.put("Lao", Lao)
    map.put("Linear_B", Linear_B)
    map.put("Old_Italic", Old_Italic)
    map.put("Tai_Viet", Tai_Viet)
    map.put("Devanagari", Devanagari)
    map.put("Lydian", Lydian)
    map.put("Tifinagh", Tifinagh)
    map.put("Ugaritic", Ugaritic)
    map.put("Thai", Thai)
    map.put("Cyrillic", Cyrillic)
    map.put("Gujarati", Gujarati)
    map.put("Carian", Carian)
    map.put("Phoenician", Phoenician)
    map.put("Balinese", Balinese)
    map.put("Braille", Braille)
    map.put("Han", Han)
    map.put("Gothic", Gothic)
    map
  }
  final val PROPERTIES: Map[String, Array[Array[Int]]] = {
    val map: HashMap[String, Array[Array[Int]]] = new HashMap[String, Array[Array[Int]]]()
    map.put("Pattern_Syntax", Pattern_Syntax)
    map.put("Other_ID_Start", Other_ID_Start)
    map.put("Pattern_White_Space", Pattern_White_Space)
    map.put("Other_Lowercase", Other_Lowercase)
    map.put("Soft_Dotted", Soft_Dotted)
    map.put("Hex_Digit", Hex_Digit)
    map.put("ASCII_Hex_Digit", ASCII_Hex_Digit)
    map.put("Deprecated", Deprecated)
    map.put("Terminal_Punctuation", Terminal_Punctuation)
    map.put("Quotation_Mark", Quotation_Mark)
    map.put("Other_ID_Continue", Other_ID_Continue)
    map.put("Bidi_Control", Bidi_Control)
    map.put("Variation_Selector", Variation_Selector)
    map.put("Noncharacter_Code_Point", Noncharacter_Code_Point)
    map.put("Other_Math", Other_Math)
    map.put("Unified_Ideograph", Unified_Ideograph)
    map.put("Hyphen", Hyphen)
    map.put("IDS_Binary_Operator", IDS_Binary_Operator)
    map.put("Logical_Order_Exception", Logical_Order_Exception)
    map.put("Radical", Radical)
    map.put("Other_Uppercase", Other_Uppercase)
    map.put("STerm", STerm)
    map.put("Other_Alphabetic", Other_Alphabetic)
    map.put("Diacritic", Diacritic)
    map.put("Extender", Extender)
    map.put("Join_Control", Join_Control)
    map.put("Ideographic", Ideographic)
    map.put("Dash", Dash)
    map.put("IDS_Trinary_Operator", IDS_Trinary_Operator)
    map.put("Other_Grapheme_Extend", Other_Grapheme_Extend)
    map.put("Other_Default_Ignorable_Code_Point",
      Other_Default_Ignorable_Code_Point)
    map.put("White_Space", White_Space)
    map
  }
  final val FOLD_CATEGORIES: Map[String, Array[Array[Int]]] = {
    val map: HashMap[String, Array[Array[Int]]] = new HashMap[String, Array[Array[Int]]]()
    map.put("Ll", foldLl)
    map.put("Inherited", foldInherited)
    map.put("M", foldM)
    map.put("L", foldL)
    map.put("Mn", foldMn)
    map.put("Common", foldCommon)
    map.put("Greek", foldGreek)
    map.put("Lu", foldLu)
    map.put("Lt", foldLt)
    map
  }
  final val FOLD_SCRIPT: Map[String, Array[Array[Int]]] = {
    new HashMap[String, Array[Array[Int]]]()
  }
  // Fold orbit bytes: 63 pairs, 252 bytes
}
